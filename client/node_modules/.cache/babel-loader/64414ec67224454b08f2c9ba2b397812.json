{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Documents/weatherApp/client/src/views/CurrentWeather.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom'; //Assets\n\nimport ThunderStormIcon from \"./assets/weather_icons/01W.svg\";\nimport RainIcon from \"./assets/weather_icons/02W.svg\";\nimport SnowIcon from \"./assets/weather_icons/03W.svg\";\nimport ClearIcon from \"./assets/weather_icons/04W-DAY.svg\";\nimport CloudsIcon from \"./assets/weather_icons/05W.svg\";\nimport NoLocationFound from \"./assets/no-location.svg\";\nimport LoadingIcon from \"./assets/loading.svg\";\n\nclass CurrentWeather extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      currentTemp: '',\n      humidity: '',\n      wind: '',\n      windDirection: '',\n      currentCondition: '',\n      currentConditionDescription: '',\n      weatherIcon: '',\n      cityName: '',\n      cityNotFound: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('/search-location-weather').then(res => res.json()).then(data => {\n      if (data.data.cod === '404') {\n        this.setState({\n          isLoading: false,\n          cityNotFound: '404'\n        });\n      } else {\n        // Determine weather icon\n        let weatherId = data.data.weather[0].id;\n\n        if (weatherId <= 232) {\n          this.setState({\n            weatherIcon: ThunderStormIcon\n          });\n        } else if (weatherId >= 300 && weatherId <= 531) {\n          this.setState({\n            weatherIcon: RainIcon\n          });\n        } else if (weatherId >= 600 && weatherId <= 622) {\n          this.setState({\n            weatherIcon: SnowIcon\n          });\n        } else if (weatherId === 800) {\n          this.setState({\n            weatherIcon: ClearIcon\n          });\n        } else if (weatherId >= 801 && weatherId <= 804) {\n          this.setState({\n            weatherIcon: CloudsIcon\n          });\n        }\n\n        this.setState({\n          isLoading: false,\n          currentTemp: Math.round(data.data.main.temp) + 'Â°',\n          humidity: data.data.main.humidity + '%',\n          wind: Math.round(data.data.wind.speed) + ' mph',\n          windDirection: data.data.wind.deg,\n          currentCondition: data.data.weather[0].main,\n          currentConditionDescription: data.data.weather[0].description,\n          cityName: data.data.name\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    const WeatherCardError = React.createElement(\"div\", {\n      className: \"weatherCardContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"weatherCardError\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: NoLocationFound,\n      alt: \"no location found\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \" Whoa! Looks like there was an error with your zipcode.\"), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Try Again\"))));\n    const WeatherConditions = this.state.cityNotFound == 404 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \" \", WeatherCardError, \" \") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"homeBtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Home\"))), React.createElement(\"div\", {\n      className: \"weatherCardContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"weatherCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.weatherIcon,\n      alt: \"Weather icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"conditionsOverview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.currentTemp), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.currentConditionDescription)), React.createElement(\"div\", {\n      className: \"conditionDetails\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Humidity: \", this.state.humidity, \" \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Wind Speed: \", this.state.wind, \" \"))), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \" Location | \", this.state.cityName, \" \")));\n    const LoadingDisplay = React.createElement(\"div\", {\n      className: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"loadingIcon\",\n      src: LoadingIcon,\n      alt: \"loading icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }));\n    const CurrentWeatherCard = this.state.isLoading === true ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \" \", LoadingDisplay, \" \") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \" \", WeatherConditions, \" \");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, CurrentWeatherCard);\n  }\n\n}\n\nexport default CurrentWeather;","map":{"version":3,"sources":["/Users/owner/Documents/weatherApp/client/src/views/CurrentWeather.js"],"names":["React","Component","Link","CurrentWeather","constructor","props","state","isLoading","currentTemp","humidity","wind","windDirection","currentCondition","currentConditionDescription","weatherIcon","cityName","cityNotFound","componentDidMount","fetch","then","res","json","data","cod","setState","weatherId","weather","id","ThunderStormIcon","RainIcon","SnowIcon","ClearIcon","CloudsIcon","Math","round","main","temp","speed","deg","description","name","catch","err","console","log","render","WeatherCardError","NoLocationFound","WeatherConditions","LoadingDisplay","LoadingIcon","CurrentWeatherCard"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;;;;;;;;;AAUA,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AACtCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AAEG,SAAKC,KAAL,GAAc;AACXC,MAAAA,SAAS,EAAE,IADA;AAEXC,MAAAA,WAAW,EAAE,EAFF;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,IAAI,EAAE,EAJK;AAKXC,MAAAA,aAAa,EAAE,EALJ;AAMXC,MAAAA,gBAAgB,EAAE,EANP;AAOXC,MAAAA,2BAA2B,EAAE,EAPlB;AAQXC,MAAAA,WAAW,EAAE,EARF;AASXC,MAAAA,QAAQ,EAAE,EATC;AAUXC,MAAAA,YAAY,EAAE;AAVH,KAAd;AAYH;;AAEDC,EAAAA,iBAAiB,GAAG;AACnBC,IAAAA,KAAK,CAAC,0BAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAI;AACb,UAAGA,IAAI,CAACA,IAAL,CAAUC,GAAV,KAAkB,KAArB,EAA4B;AAC3B,aAAKC,QAAL,CAAc;AACbjB,UAAAA,SAAS,EAAE,KADE;AAEbS,UAAAA,YAAY,EAAE;AAFD,SAAd;AAIA,OALD,MAKO;AACJ;AACA,YAAIS,SAAS,GAAGH,IAAI,CAACA,IAAL,CAAUI,OAAV,CAAkB,CAAlB,EAAqBC,EAArC;;AAEA,YAAGF,SAAS,IAAI,GAAhB,EAAqB;AAChB,eAAKD,QAAL,CAAc;AAAEV,YAAAA,WAAW,EAAEc;AAAf,WAAd;AACJ,SAFD,MAEO,IAAGH,SAAS,IAAI,GAAb,IAAoBA,SAAS,IAAI,GAApC,EAAyC;AAC3C,eAAKD,QAAL,CAAc;AAAEV,YAAAA,WAAW,EAAEe;AAAf,WAAd;AACJ,SAFM,MAEA,IAAGJ,SAAS,IAAI,GAAb,IAAoBA,SAAS,IAAI,GAApC,EAA0C;AAC5C,eAAKD,QAAL,CAAc;AAAEV,YAAAA,WAAW,EAAEgB;AAAf,WAAd;AACJ,SAFM,MAEA,IAAGL,SAAS,KAAK,GAAjB,EAAsB;AACxB,eAAKD,QAAL,CAAc;AAAEV,YAAAA,WAAW,EAAEiB;AAAf,WAAd;AACJ,SAFM,MAEA,IAAGN,SAAS,IAAI,GAAb,IAAoBA,SAAS,IAAI,GAApC,EAAyC;AAC3C,eAAKD,QAAL,CAAc;AAAEV,YAAAA,WAAW,EAAEkB;AAAf,WAAd;AACJ;;AACC,aAAKR,QAAL,CAAc;AACXjB,UAAAA,SAAS,EAAE,KADA;AAEXC,UAAAA,WAAW,EAAEyB,IAAI,CAACC,KAAL,CAAWZ,IAAI,CAACA,IAAL,CAAUa,IAAV,CAAeC,IAA1B,IAAkC,GAFpC;AAGX3B,UAAAA,QAAQ,EAAEa,IAAI,CAACA,IAAL,CAAUa,IAAV,CAAe1B,QAAf,GAA0B,GAHzB;AAIXC,UAAAA,IAAI,EAAEuB,IAAI,CAACC,KAAL,CAAWZ,IAAI,CAACA,IAAL,CAAUZ,IAAV,CAAe2B,KAA1B,IAAmC,MAJ9B;AAKX1B,UAAAA,aAAa,EAAEW,IAAI,CAACA,IAAL,CAAUZ,IAAV,CAAe4B,GALnB;AAMX1B,UAAAA,gBAAgB,EAAEU,IAAI,CAACA,IAAL,CAAUI,OAAV,CAAkB,CAAlB,EAAqBS,IAN5B;AAOXtB,UAAAA,2BAA2B,EAAES,IAAI,CAACA,IAAL,CAAUI,OAAV,CAAkB,CAAlB,EAAqBa,WAPvC;AAQXxB,UAAAA,QAAQ,EAAEO,IAAI,CAACA,IAAL,CAAUkB;AART,SAAd;AAUJ;AACD,KAlCD,EAmCCC,KAnCD,CAmCOC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACF,KArCD;AAsCA;;AAEDG,EAAAA,MAAM,GAAG;AACR,UAAMC,gBAAgB,GACnB;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,GAAG,EAAEC,eAAV;AAA2B,MAAA,GAAG,EAAC,mBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAFN,EAGG,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAb,CAHH,CADF,CADH;AAUA,UAAMC,iBAAiB,GACtB,KAAK1C,KAAL,CAAWU,YAAX,IAA2B,GAA3B,GAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAQ8B,gBAAR,MAAjC,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAb,CADH,CADH,EAIG;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL;AAAK,MAAA,GAAG,EAAE,KAAKxC,KAAL,CAAWQ,WAArB;AAAkC,MAAA,GAAG,EAAC,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,EAEF;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKR,KAAL,CAAWE,WAAf,CADH,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKF,KAAL,CAAWO,2BAAf,CAFH,CAFE,EAMF;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAc,KAAKP,KAAL,CAAWG,QAAzB,MADH,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgB,KAAKH,KAAL,CAAWI,IAA3B,MAFH,CANE,CADH,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAiB,KAAKJ,KAAL,CAAWS,QAA5B,MAZF,CAJH,CAFD;AAuBA,UAAMkC,cAAc,GACjB;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,GAAG,EAAEC,WAAlC;AAA+C,MAAA,GAAG,EAAC,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADH;AAMA,UAAMC,kBAAkB,GACrB,KAAK7C,KAAL,CAAWC,SAAX,KAAyB,IAAzB,GAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAO0C,cAAP,MAAhC,GAAgE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAOD,iBAAP,MADnE;AAIA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACWG,kBADX,CADH;AAKA;;AA5GqC;;AA+GvC,eAAehD,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n//Assets\nimport ThunderStormIcon from './assets/weather_icons/01W.svg';\nimport RainIcon from './assets/weather_icons/02W.svg';\nimport SnowIcon from './assets/weather_icons/03W.svg';\nimport ClearIcon from './assets/weather_icons/04W-DAY.svg';\nimport CloudsIcon from './assets/weather_icons/05W.svg';\nimport NoLocationFound from './assets/no-location.svg';\nimport LoadingIcon from './assets/loading.svg';\n\n\nclass CurrentWeather extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t   this.state = ({\n\t\t      isLoading: true,\n\t\t      currentTemp: '',\n\t\t      humidity: '',\n\t\t      wind: '',\n\t\t      windDirection: '',\n\t\t      currentCondition: '',\n\t\t      currentConditionDescription: '',\n\t\t      weatherIcon: '',\n\t\t      cityName: '',\n\t\t      cityNotFound: ''\n\t\t   })\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('/search-location-weather')\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tif(data.data.cod === '404') {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tcityNotFound: '404'\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t   // Determine weather icon\n\t\t\t   let weatherId = data.data.weather[0].id;\n\n\t\t\t   if(weatherId <= 232) {\n\t\t\t        this.setState({ weatherIcon: ThunderStormIcon })\n\t\t\t   } else if(weatherId >= 300 && weatherId <= 531) {\n\t\t\t        this.setState({ weatherIcon: RainIcon });\n\t\t\t   } else if(weatherId >= 600 && weatherId <= 622 ) {\n\t\t\t        this.setState({ weatherIcon: SnowIcon });\n\t\t\t   } else if(weatherId === 800) {\n\t\t\t        this.setState({ weatherIcon: ClearIcon });\n\t\t\t   } else if(weatherId >= 801 && weatherId <= 804) {\n\t\t\t        this.setState({ weatherIcon: CloudsIcon });\n\t\t\t   }\n\t\t\t     this.setState({\n\t\t\t        isLoading: false,\n\t\t\t        currentTemp: Math.round(data.data.main.temp) + 'Â°',\n\t\t\t        humidity: data.data.main.humidity + '%',\n\t\t\t        wind: Math.round(data.data.wind.speed) + ' mph',\n\t\t\t        windDirection: data.data.wind.deg,\n\t\t\t        currentCondition: data.data.weather[0].main,\n\t\t\t        currentConditionDescription: data.data.weather[0].description,\n\t\t\t        cityName: data.data.name\n\t\t\t     });\n\t\t\t}\n\t\t})\n\t\t.catch(err => {\n\t\t   console.log(err);\n\t\t})\t\n\t}\n\n\trender() {\n\t\tconst WeatherCardError = (\n\t\t   <div className='weatherCardContainer'>\n\t\t     <div className='weatherCardError'>\n\t\t        <img src={NoLocationFound} alt='no location found'/>\n\t\t           <p> Whoa! Looks like there was an error with your zipcode.</p>\n\t\t        <Link to='/'><button>Try Again</button></Link>\n\t\t     </div>\n\t\t   </div>\n\t\t)\n\n\t\tconst WeatherConditions = (\n\t\t\tthis.state.cityNotFound == 404 ? <div> { WeatherCardError } </div> :\n\t\t\t<div>\n\t\t\t   <div className='homeBtn'>\n\t\t\t\t     <Link to='/'><button>Home</button></Link>\n\t\t\t   </div>\n\t\t\t   <div className='weatherCardContainer'>\n\t\t\t      <div className='weatherCard'>\n\t\t\t\t<img src={this.state.weatherIcon} alt='Weather icon'/>\n\t\t\t\t   <div className='conditionsOverview'>\n\t\t\t\t      <p>{this.state.currentTemp}</p>\n\t\t\t\t      <p>{this.state.currentConditionDescription}</p>\n\t\t\t\t   </div>\n\t\t\t\t   <div className='conditionDetails'>\n\t\t\t\t      <p>Humidity: {this.state.humidity} </p>\n\t\t\t\t      <p>Wind Speed: {this.state.wind} </p>\n\t\t\t\t   </div>\n\t\t\t      </div> \n\t\t\t     <h4> Location | {this.state.cityName} </h4>\n\t\t\t   </div>\n\t\t\t</div>\n\t\t)\n\n\t\tconst LoadingDisplay = (\n\t\t   <div className='loading'>\n\t\t      <img className='loadingIcon' src={LoadingIcon} alt='loading icon'/>\n\t\t   </div>\n\t\t)\n\n\t\tconst CurrentWeatherCard = ( \n\t\t   this.state.isLoading === true ? <div> {LoadingDisplay} </div> : <div> {WeatherConditions} </div>\n\t\t)\n\n\t\treturn (\n\t\t   <div>\n\t             { CurrentWeatherCard }\n\t\t   </div>\n\t\t)\n\t}\n}\n\nexport default CurrentWeather;"]},"metadata":{},"sourceType":"module"}